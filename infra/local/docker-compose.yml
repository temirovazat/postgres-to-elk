x-postgres-env: &postgres-env
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: cinemax_database
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

x-elastic-env: &elastic-env
  ELASTIC_HOST: elastic
  ELASTIC_PORT: 9200

x-redis-env: &redis-env
  REDIS_HOST: redis
  REDIS_PORT: 6379

services:
  script:
    build: ../../backend
    environment:
      <<: [*postgres-env, *elastic-env, *redis-env]
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:14.5-alpine
    ports:
      - 5432:5432
    volumes:
      - ../data/cinemax_database.sql:/docker-entrypoint-initdb.d/cinemax_database.sql
    environment:
      <<: *postgres-env
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 100

  elastic:
    image: elasticsearch:7.17.8
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms1024m -Xmx1024m
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 100
  
  redis:
    image: redis:7.0.5
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 100
