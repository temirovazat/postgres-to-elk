name: postgres-to-elk

on:
  push:
    branches: [ main ]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    services:
      postgres:
        image: postgres:14.5-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: cinemax_database
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd "pg_isready -h postgres -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      elasticsearch:
        image: elasticsearch:7.17.8
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7.0.5
        ports:
          - 6379:6379
        options: >- 
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt --no-cache-dir
      - name: Lint with flake8
        run: |
          pip install wemake-python-styleguide flake8-html
          flake8 backend --format=html --htmldir=flake8
      - name: Lint with mypy
        run: |
          pip install mypy types-psycopg2 types-redis types-pytz lxml 
          mypy backend --html-report=mypy
      - name: Run migrations
        run: psql -f infra/data/cinemax_database.sql postgresql://postgres:postgres@localhost:5432/cinemax_database
      - name: Run script
        run: |
          cd backend/src
          nohup python main.py &
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      - name: API tests with Postman
        run: |
          cd tests
          newman run src/ETLTests.postman_collection.json -r htmlextra,cli --reporter-htmlextra-export="../postman/report.html"
      - name: Stop script
        run: |
          kill $(ps aux | grep python | grep main.py | awk '{print $2}')
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: Report
          path: |
            postman/
            flake8/
            mypy/

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: true
          context: backend
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/postgres_to_elastic:${{ vars.TAG }}
            ${{ secrets.DOCKER_USERNAME }}/postgres_to_elastic:latest

  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            В репозитории ${{ github.repository }} выполнен коммит:
            Автор: ${{ github.event.commits[0].author.name }}
            Сообщение: ${{ github.event.commits[0].message }}
            Ссылка: https://github.com/${{ github.repository }}/commit/${{github.sha}}
